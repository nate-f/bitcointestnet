using Microsoft.VisualStudio.TestTools.UnitTesting;
using Structures.Messages;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Structures.Messages.Tests
{
    [TestClass()]
    public class VersionMessageTests
    {
        [TestMethod()]
        public void VersionMessageTest()
        {
            var message = Message.CreateMessageFromByteArray(versionMessage2);
            Assert.IsNotNull(message);
            Assert.IsInstanceOfType(message, typeof(VersionMessage));
        }
        [TestMethod()]
        public void VersionMessageTest2()
        {
            var message = Message.CreateMessageFromByteArray(versionMessage1);
            Assert.IsNotNull(message);
            Assert.IsInstanceOfType(message, typeof(VersionMessage));
        }
        byte[] versionMessage1 = new byte[105] {0xF9, 0xBE, 0xB4, 0xD9, 0x76, 0x65, 0x72, 0x73,  0x69, 0x6F, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                0x55, 0x00, 0x00, 0x00, 0x9C, 0x7C, 0x00, 0x00,  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                0xE6, 0x15, 0x10, 0x4D, 0x00, 0x00, 0x00, 0x00,  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0xFF, 0xFF, 0x0A, 0x00, 0x00, 0x01,
                                                0x20, 0x8D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x0A, 0x00,  0x00, 0x02, 0x20, 0x8D, 0xDD, 0x9D, 0x20, 0x2C,
                                                0x3A, 0xB4, 0x57, 0x13, 0x00, 0x55, 0x81, 0x01,  0x00 };

        byte[] versionMessage2 = new byte[124] { 0xf9, 0xbe, 0xb4, 0xd9, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                 0x64, 0x00, 0x00, 0x00, 0x35, 0x8d, 0x49, 0x32, 0x62, 0xea, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
                                                 0x00, 0x00, 0x00, 0x00, 0x11, 0xb2, 0xd0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
                                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff,
                                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                                 0x3b, 0x2e, 0xb3, 0x5d, 0x8c, 0xe6, 0x17, 0x65, 0x0f, 0x2f, 0x53, 0x61, 0x74, 0x6f, 0x73, 0x68,
                                                 0x69, 0x3a, 0x30, 0x2e, 0x37, 0x2e, 0x32, 0x2f, 0xc0, 0x3e, 0x03, 0x00};




    }
}